{
    "$schema": "https://json-schema.org/draft/2020-12/schema",
    "$id": "http://schemas.silverton.io/config/app/v1.0.json",
    "title": "config/app/v1.0.json",
    "type": "object",
    "properties": {
        "version": {
            "type": "number",
            "description": "The config version"
        },
        "app": {
            "type": "object",
            "description": "Application configuration",
            "properties": {
                "env": {
                    "type": "string",
                    "description": "Collector environment"
                },
                "mode": {
                    "type": "string",
                    "description": "Collector mode",
                    "enum": ["release", "debug"]
                },
                "port": {
                    "type": "integer",
                    "description": "Collector port"
                },
                "trackerDomain": {
                    "type": "string",
                    "description": "The collector domain"
                },
                "stats": {
                    "type": "object",
                    "description": "Stats configuration",
                    "properties": {
                        "enabled": {
                            "type": "boolean",
                            "description": "Switch to enable or disable stats endpoints"
                        },
                        "path": {
                            "type": "string",
                            "description": "The path by which to expose collector statistics"
                        }
                    },
                    "additionalProperties": false,
                    "required": ["enabled", "path"]
                }
            },
            "additionalProperties": false,
            "required": ["env", "mode", "port", "trackerDomain", "stats"]
        },
        "snowplow": {
            "type": "object",
            "description": "Snowplow collector configuration",
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Whether or not to activate snowplow tracking"
                },
                "standardRoutesEnabled": {
                    "type": "boolean",
                    "description": "Whether to not to activate the standard snowplow routes"
                },
                "openRedirectsEnabled": {
                    "type": "boolean",
                    "description": "Whether or not to activate redirect-based tracking"
                },
                "getPath": {
                    "type": "string",
                    "description": "The path by which to process get-based events"
                },
                "postPath": {
                    "type": "string",
                    "description": "The path by which to process post-based events"
                },
                "redirectPath": {
                    "type": "string",
                    "description": "The path by which to process redirect-based events"
                },
                "anonymize": {
                    "type": "object",
                    "description": "Snowplow anonymization config",
                    "properties": {
                        "ip": {
                            "type": "boolean",
                            "description": "Whether or not to hash the ip address of incoming snowplow events"
                        },
                        "userId": {
                            "type": "boolean",
                            "description": "Whether or not to hash the userId of incoming snowplow events"
                        }
                    }
                }
            },
            "additionalProperties": false,
            "required": ["enabled", "standardRoutesEnabled", "openRedirectsEnabled", "getPath", "postPath", "redirectPath", "anonymize"]
        },
        "cloudevents": {
            "type": "object",
            "description": "CloudEvents collector configuration",
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Whether or not to activate cloudevents tracking"
                },
                "postPath": {
                    "type": "string",
                    "description": "The path by which to process incoming single-message cloudevents payloads"
                },
                "batchPostPath": {
                    "type": "string",
                    "description": "The path by which to process incoming batch cloudevents payloads"
                }
            },
            "additionalProperties": false,
            "required": ["enabled", "postPath", "batchPostPath"]
        },
        "generic": {
            "type": "object",
            "description": "Generic self-describing events collector configuration",
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Whether or not to activate generic self-describing event tracking"
                },
                "postPath": {
                    "type": "string",
                    "description": "The path by which to process incoming single-message self describing payloads"
                },
                "batchPostPath": {
                    "type": "string",
                    "description": "The path by which to process incoming batch self describing payloads"
                },
                "contexts": {
                    "type": "object",
                    "description": "Self describing events context config",
                    "properties": {
                        "rootKey": {
                            "type": "string",
                            "description": "The root json key that defines event contexts"
                        }, 
                        "schemaKey": {
                            "type": "string",
                            "description": "The key that defines the context schema. (root.CONTEXTKEY.SCHEMAKEY)"
                        },
                        "dataKey": {
                            "type": "string",
                            "description": "The key that defines the context data. (root.CONTEXTKEY.DATAKEY)"
                        }
                    },
                    "additionalProperties": false,
                    "required": ["rootKey", "schemaKey", "dataKey"]
                },
                "event": {
                    "type": "object",
                    "description": "Self describing events event data config",
                    "properties": {
                        "rootKey": {
                            "type": "string",
                            "description": "The root json key that defines event data. (root.EVENTKEY)"
                        }, 
                        "schemaKey": {
                            "type": "string",
                            "description": "The key that defines the event schema. (root.EVENTKEY.SCHEMAKEY)"
                        },
                        "dataKey": {
                            "type": "string",
                            "description": "The key that defines the event data. (root.EVENTKEY.DATAKEY)"
                        }
                    },
                    "additionalProperties": false,
                    "required": ["rootKey", "schemaKey", "dataKey"]
                }
            }
        },
        "cookie": {
            "type": "object",
            "description": "Server-set cookie configuration",
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Whether or not to activate the server-side id cookie"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the id cookie"
                },
                "secure": {
                    "type": "boolean",
                    "description": "Secure cookie?"
                },
                "ttlDays": {
                    "type": "integer",
                    "description": "The number of days to persist the id cookie"
                },
                "domain": {
                    "type": "string",
                    "description": "The id cookie domain"
                },
                "path": {
                    "type": "string",
                    "description": "The id cookie path"
                },
                "sameSite": {
                    "type": "string",
                    "description": "The sameSite attribute of the id cookie",
                    "enum": ["Lax", "Strict", "None"]
                }
            },
            "additionalProperties": false,
            "required": ["enabled", "name", "secure", "ttlDays", "domain", "path", "sameSite"]
        },
        "cors": {
            "type": "object",
            "description": "CORS configuration",
            "properties": {
                "allowOrigin": {
                    "type": "array",
                    "description": "A list of origins to allow CORS",
                    "items": {
                        "type": "string"
                    }
                },
                "allowCredentials": {
                    "type": "boolean",
                    "description": "CORS allow credentials"
                },
                "allowMethods": {
                    "type": "array",
                    "description": "HTTP methods to allow CORS",
                    "items": {
                        "type": "string",
                        "enum": ["OPTIONS", "GET", "POST"]
                    }
                },
                "maxAge": {
                    "type": "integer",
                    "description": "Preflight request cache duration"
                }
            },
            "additionalProperties": false,
            "required": ["allowOrigin", "allowCredentials", "allowMethods", "maxAge"]
        },
        "schemaCache": {
            "type": "object",
            "description": "Schema cache configuration",
            "properties": {
                "schemaCacheBackend": {
                    "type": "object",
                    "description": "Cache backend configuration",
                    "properties": {
                        "type": {
                            "type": "string",
                            "description": "The type of schema cache backend",
                            "enum": ["gcs", "s3", "fs", "http", "https"]
                        },
                        "path": {
                            "type": "string",
                            "description": "The root path of the schema cache backend"
                        },
                        "bucket": {
                            "type": "string",
                            "description": "The schema cache bucket, if applicable"
                        },
                        "host": {
                            "type": "string",
                            "description": "The schema cache host, if applicable"
                        }
                    },
                    "additionalProperties": false,
                    "required": ["type", "path"]
                },
                "ttlSeconds": {
                    "type": "integer",
                    "description": "The number of seconds to cache schemas for"
                },
                "maxSizeBytes": {
                    "type": "integer",
                    "description": "The max schema cache size, in bytes"
                },
                "purge": {
                    "type": "object",
                    "description": "Cache purge configuration",
                    "properties": {
                        "enabled": {
                            "type": "boolean",
                            "description": "Whether or not to enabled schema cache purge endpoints"
                        },
                        "path": {
                            "type": "string",
                            "description": "The path by which to purge the schema cache"
                        }
                    },
                    "required": ["enabled", "path"]
                }
            }
        },
        "sink": {
            "type": "object",
            "description": "Sink configuration",
            "properties": {
                "type": {
                    "type": "string",
                    "description": "The sink configuration",
                    "enum": ["kafka", "pubsub", "kinesis", "kinesis-firehose"]
                },
                "validEventTopic": {
                    "type": "string",
                    "description": "The name of the valid event topic (or 'stream', if kinesis)"
                },
                "invalidEventTopic": {
                    "type": "string",
                    "description": "The name of the invalid event topic (or 'stream', if kinesis)"
                },
                "produceTimeout": {
                    "type": "integer",
                    "description": "The sink producer timeout in seconds"
                },
                "project": {
                    "type": "string",
                    "description": "The name of the GCP project, if sink type is pubsub"
                },
                "brokers": {
                    "type": "array",
                    "description": "A list of brokers (HOST:PORT), if sink type is kafka"
                }
            },
            "additionalProperties": false,
            "required": ["type", "validEventTopic", "invalidEventTopic", "produceTimeout"]
        },
        "tele": {
            "type": "object",
            "description": "Tele configuration",
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Whether or not to allow telemetry"
                }
            }
        }
    },
    "additionalProperties": false
}
